//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using CMS;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine.Types;
using CMS.DocumentEngine;

[assembly: RegisterDocumentType(TermsAndAcronymsPage.CLASS_NAME, typeof(TermsAndAcronymsPage))]

namespace CMS.DocumentEngine.Types
{
    /// <summary>
    /// Represents a content item of type TermsAndAcronymsPage.
    /// </summary>
    public partial class TermsAndAcronymsPage : TreeNode
    {
        #region "Constants and variables"

        /// <summary>
        /// The name of the data class.
        /// </summary>
        public const string CLASS_NAME = "custom.TermsAndAcronymsPage";


        /// <summary>
        /// The instance of the class that provides extended API for working with TermsAndAcronymsPage fields.
        /// </summary>
        private readonly TermsAndAcronymsPageFields mFields;

        #endregion


        #region "Properties"

        /// <summary>
        /// TermsAndAcronimsPageID.
        /// </summary>
        [DatabaseIDField]
        public int TermsAndAcronimsPageID
        {
            get
            {
                return ValidationHelper.GetInteger(GetValue("TermsAndAcronimsPageID"), 0);
            }
            set
            {
                SetValue("TermsAndAcronimsPageID", value);
            }
        }


        /// <summary>
        /// Tile Title.
        /// </summary>
        [DatabaseField]
        public string TileTitle
        {
            get
            {
                return ValidationHelper.GetString(GetValue("TileTitle"), "");
            }
            set
            {
                SetValue("TileTitle", value);
            }
        }


        /// <summary>
        /// Title.
        /// </summary>
        [DatabaseField]
        public string Title
        {
            get
            {
                return ValidationHelper.GetString(GetValue("Title"), "");
            }
            set
            {
                SetValue("Title", value);
            }
        }


        /// <summary>
        /// Image displayed on a tile.
        /// </summary>
        [DatabaseField]
        public string HomeImage
        {
            get
            {
                return ValidationHelper.GetString(GetValue("HomeImage"), "");
            }
            set
            {
                SetValue("HomeImage", value);
            }
        }


        /// <summary>
        /// Text that appears on hover over the tile.
        /// </summary>
        [DatabaseField]
        public string Description
        {
            get
            {
                return ValidationHelper.GetString(GetValue("Description"), "");
            }
            set
            {
                SetValue("Description", value);
            }
        }


        /// <summary>
        /// Search Label.
        /// </summary>
        [DatabaseField]
        public string SearchLabel
        {
            get
            {
                return ValidationHelper.GetString(GetValue("SearchLabel"), "");
            }
            set
            {
                SetValue("SearchLabel", value);
            }
        }


        /// <summary>
        /// Sort Label.
        /// </summary>
        [DatabaseField]
        public string SortLabel
        {
            get
            {
                return ValidationHelper.GetString(GetValue("SortLabel"), "");
            }
            set
            {
                SetValue("SortLabel", value);
            }
        }


        /// <summary>
        /// First Char In Alphabet Label.
        /// </summary>
        [DatabaseField]
        public string FirstCharInAlphabetLabel
        {
            get
            {
                return ValidationHelper.GetString(GetValue("FirstCharInAlphabetLabel"), "");
            }
            set
            {
                SetValue("FirstCharInAlphabetLabel", value);
            }
        }


        /// <summary>
        /// Last Char In Alphabet Label.
        /// </summary>
        [DatabaseField]
        public string LastCharInAlphabetLabel
        {
            get
            {
                return ValidationHelper.GetString(GetValue("LastCharInAlphabetLabel"), "");
            }
            set
            {
                SetValue("LastCharInAlphabetLabel", value);
            }
        }


        /// <summary>
        /// Loading Label.
        /// </summary>
        [DatabaseField]
        public string LoadingLabel
        {
            get
            {
                return ValidationHelper.GetString(GetValue("LoadingLabel"), "");
            }
            set
            {
                SetValue("LoadingLabel", value);
            }
        }


        /// <summary>
        /// No Items Label.
        /// </summary>
        [DatabaseField]
        public string NoItemsLabel
        {
            get
            {
                return ValidationHelper.GetString(GetValue("NoItemsLabel"), "");
            }
            set
            {
                SetValue("NoItemsLabel", value);
            }
        }


        /// <summary>
        /// Sidebar Items.
        /// </summary>
        [DatabaseField]
        public string SidebarItems
        {
            get
            {
                return ValidationHelper.GetString(GetValue("SidebarItems"), "");
            }
            set
            {
                SetValue("SidebarItems", value);
            }
        }


        /// <summary>
        /// Gets an object that provides extended API for working with TermsAndAcronymsPage fields.
        /// </summary>
        public TermsAndAcronymsPageFields Fields
        {
            get
            {
                return mFields;
            }
        }


        /// <summary>
        /// Provides extended API for working with TermsAndAcronymsPage fields.
        /// </summary>
        public partial class TermsAndAcronymsPageFields
        {
            /// <summary>
            /// The content item of type TermsAndAcronymsPage that is a target of the extended API.
            /// </summary>
            private readonly TermsAndAcronymsPage mInstance;


            /// <summary>
            /// Initializes a new instance of the <see cref="TermsAndAcronymsPageFields" /> class with the specified content item of type TermsAndAcronymsPage.
            /// </summary>
            /// <param name="instance">The content item of type TermsAndAcronymsPage that is a target of the extended API.</param>
            public TermsAndAcronymsPageFields(TermsAndAcronymsPage instance)
            {
                mInstance = instance;
            }


            /// <summary>
            /// TermsAndAcronimsPageID.
            /// </summary>
            public int TermsAndAcronimsPageID
            {
                get
                {
                    return mInstance.TermsAndAcronimsPageID;
                }
                set
                {
                    mInstance.TermsAndAcronimsPageID = value;
                }
            }


            /// <summary>
            /// Tile Title.
            /// </summary>
            public string TileTitle
            {
                get
                {
                    return mInstance.TileTitle;
                }
                set
                {
                    mInstance.TileTitle = value;
                }
            }


            /// <summary>
            /// Title.
            /// </summary>
            public string Title
            {
                get
                {
                    return mInstance.Title;
                }
                set
                {
                    mInstance.Title = value;
                }
            }


            /// <summary>
            /// Image displayed on a tile.
            /// </summary>
            public string HomeImage
            {
                get
                {
                    return mInstance.HomeImage;
                }
                set
                {
                    mInstance.HomeImage = value;
                }
            }


            /// <summary>
            /// Text that appears on hover over the tile.
            /// </summary>
            public string Description
            {
                get
                {
                    return mInstance.Description;
                }
                set
                {
                    mInstance.Description = value;
                }
            }


            /// <summary>
            /// Search Label.
            /// </summary>
            public string SearchLabel
            {
                get
                {
                    return mInstance.SearchLabel;
                }
                set
                {
                    mInstance.SearchLabel = value;
                }
            }


            /// <summary>
            /// Sort Label.
            /// </summary>
            public string SortLabel
            {
                get
                {
                    return mInstance.SortLabel;
                }
                set
                {
                    mInstance.SortLabel = value;
                }
            }


            /// <summary>
            /// First Char In Alphabet Label.
            /// </summary>
            public string FirstCharInAlphabetLabel
            {
                get
                {
                    return mInstance.FirstCharInAlphabetLabel;
                }
                set
                {
                    mInstance.FirstCharInAlphabetLabel = value;
                }
            }


            /// <summary>
            /// Last Char In Alphabet Label.
            /// </summary>
            public string LastCharInAlphabetLabel
            {
                get
                {
                    return mInstance.LastCharInAlphabetLabel;
                }
                set
                {
                    mInstance.LastCharInAlphabetLabel = value;
                }
            }


            /// <summary>
            /// Loading Label.
            /// </summary>
            public string LoadingLabel
            {
                get
                {
                    return mInstance.LoadingLabel;
                }
                set
                {
                    mInstance.LoadingLabel = value;
                }
            }


            /// <summary>
            /// No Items Label.
            /// </summary>
            public string NoItemsLabel
            {
                get
                {
                    return mInstance.NoItemsLabel;
                }
                set
                {
                    mInstance.NoItemsLabel = value;
                }
            }


            /// <summary>
            /// Sidebar Items.
            /// </summary>
            public string SidebarItems
            {
                get
                {
                    return mInstance.SidebarItems;
                }
                set
                {
                    mInstance.SidebarItems = value;
                }
            }


            /// <summary>
            /// Sidebar Items.
            /// </summary>
            public IEnumerable<TreeNode> SidebarItems2
            {
                get
                {
                    return mInstance.GetRelatedDocuments("SidebarItems2");
                }
            }
        }

        #endregion


        #region "Constructors"

        /// <summary>
        /// Initializes a new instance of the <see cref="TermsAndAcronymsPage" /> class.
        /// </summary>
        public TermsAndAcronymsPage()
            : base(CLASS_NAME)
        {
            mFields = new TermsAndAcronymsPageFields(this);
        }

        #endregion
    }
}